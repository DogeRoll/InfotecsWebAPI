version: '3.8'

services:
  db:
    image: postgres:15-alpine
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pgdb"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=Postgres1
      - POSTGRES_USER=postgres
      - POSTGRES_DB=pgdb

  webapi:
    build: 
      context: "./src/"
      dockerfile: "InfotecsWebAPI.Web/Dockerfile"
      args:
        BUILD_CONFIGURATION: Debug
    ports:
      - 8080:8080
      - 8081:8081
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - ./src:/var/lib/infotecswebapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development

  pgadmin:
    image: dpage/pgadmin4:9.1.0
    restart: always
    ports:
      - 15432:80
    depends_on:
      db:
        condition: service_healthy
        restart: true
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@pgadmin.com
      - PGADMIN_DEFAULT_PASSWORD=Admin1
      - PGADMIN_LISTEN_PORT=80
      
volumes:
  app-db-data:
  pgadmin:
  webapi:
